<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
    <section name="byteartRetailConfigSection" type="ByteartRetail.Infrastructure.Config.ByteartRetailConfigSection, ByteartRetail.Infrastructure"/>
  </configSections>

  <appSettings>
    <add key="baseAddress" value="http://localhost:8559"/>
  </appSettings>

  <!--BEGIN: Unity-->
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <container>
      <!--Repository Context & Repositories-->

      <!--MongoDB-->
      <register type="ByteartRetail.Domain.Repositories.MongoDB.IMongoDBRepositoryContextSettings, ByteartRetail.Domain.Repositories" mapTo="ByteartRetail.Domain.Repositories.MongoDB.MongoDBRepositoryContextSettings, ByteartRetail.Domain.Repositories"/>
      <register type="ByteartRetail.Domain.Repositories.IRepositoryContext, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.MongoDB.MongoDBRepositoryContext, ByteartRetail.Domain.Repositories">
        <lifetime type="ByteartRetail.Infrastructure.UnityExtensions.UnityOperationContextLifetimeManager, ByteartRetail.Infrastructure"/>
        <constructor>
          <param name="settings">
            <dependency type="ByteartRetail.Domain.Repositories.MongoDB.IMongoDBRepositoryContextSettings, ByteartRetail.Domain.Repositories"/>
          </param>
        </constructor>
      </register>
      <register type="ByteartRetail.Domain.Repositories.IUserRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.MongoDB.UserRepository, ByteartRetail.Domain.Repositories"/>
      <register type="ByteartRetail.Domain.Repositories.ISalesOrderRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.MongoDB.SalesOrderRepository, ByteartRetail.Domain.Repositories"/>
      <register type="ByteartRetail.Domain.Repositories.IProductRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.MongoDB.ProductRepository, ByteartRetail.Domain.Repositories"/>
      <register type="ByteartRetail.Domain.Repositories.ICategoryRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.MongoDB.CategoryRepository, ByteartRetail.Domain.Repositories"/>
      <register type="ByteartRetail.Domain.Repositories.ICategorizationRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.MongoDB.CategorizationRepository, ByteartRetail.Domain.Repositories"/>
      <register type="ByteartRetail.Domain.Repositories.IShoppingCartRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.MongoDB.ShoppingCartRepository, ByteartRetail.Domain.Repositories"/>
      <register type="ByteartRetail.Domain.Repositories.IShoppingCartItemRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.MongoDB.ShoppingCartItemRepository, ByteartRetail.Domain.Repositories"/>
      <register type="ByteartRetail.Domain.Repositories.IRoleRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.MongoDB.RoleRepository, ByteartRetail.Domain.Repositories"/>
      <register type="ByteartRetail.Domain.Repositories.IUserRoleRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.MongoDB.UserRoleRepository, ByteartRetail.Domain.Repositories"/>

      <!--Domain Services-->
      <register type="ByteartRetail.Domain.Services.IDomainService, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Services.DomainService, ByteartRetail.Domain"/>
      <!--Application Service Implementations-->
      <register type="ByteartRetail.ServiceContracts.IUserService, ByteartRetail.ServiceContracts" mapTo="ByteartRetail.Application.Implementation.UserServiceImpl, ByteartRetail.Application">
      </register>
      <register type="ByteartRetail.ServiceContracts.IProductService, ByteartRetail.ServiceContracts" mapTo="ByteartRetail.Application.Implementation.ProductServiceImpl, ByteartRetail.Application">
      </register>
      <register type="ByteartRetail.ServiceContracts.IOrderService, ByteartRetail.ServiceContracts" mapTo="ByteartRetail.Application.Implementation.OrderServiceImpl, ByteartRetail.Application">
      </register>
      <register type="ByteartRetail.ServiceContracts.IPostbackService, ByteartRetail.ServiceContracts" mapTo="ByteartRetail.Application.Implementation.PostbackServiceImpl, ByteartRetail.Application">
      </register>
      <!--Domain Event Handlers-->
      <register type="ByteartRetail.Domain.Events.IDomainEventHandler`1[[ByteartRetail.Domain.Events.OrderDispatchedEvent, ByteartRetail.Domain]], ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Events.Handlers.OrderDispatchedEventHandler, ByteartRetail.Domain" name="OrderDispatchedEventHandler"/>
      <register type="ByteartRetail.Domain.Events.IDomainEventHandler`1[[ByteartRetail.Domain.Events.OrderConfirmedEvent, ByteartRetail.Domain]], ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Events.Handlers.OrderConfirmedEventHandler, ByteartRetail.Domain" name="OrderConfirmedEventHandler"/>
      <register type="ByteartRetail.Domain.Events.IDomainEventHandler`1[[ByteartRetail.Domain.Events.GetUserOrdersEvent, ByteartRetail.Domain]], ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Events.Handlers.GetUserOrdersEventHandler, ByteartRetail.Domain" name="GetUserOrdersEventHandler"/>
      <!--Event Handlers-->
      <register name="orderDispatchedSendEmailHandler" type="ByteartRetail.Events.IEventHandler`1[[ByteartRetail.Domain.Events.OrderDispatchedEvent, ByteartRetail.Domain]], ByteartRetail.Events" mapTo="ByteartRetail.Events.Handlers.SendEmailHandler, ByteartRetail.Events.Handlers"/>
      <register name="orderConfirmedSendEmailHandler" type="ByteartRetail.Events.IEventHandler`1[[ByteartRetail.Domain.Events.OrderConfirmedEvent, ByteartRetail.Domain]], ByteartRetail.Events" mapTo="ByteartRetail.Events.Handlers.SendEmailHandler, ByteartRetail.Events.Handlers"/>
      <!--Event Aggregator-->
      <register type="ByteartRetail.Events.IEventAggregator, ByteartRetail.Events" mapTo="ByteartRetail.Events.EventAggregator, ByteartRetail.Events">
        <constructor>
          <param name="handlers">
            <array>
              <dependency name="orderDispatchedSendEmailHandler" type="ByteartRetail.Events.IEventHandler`1[[ByteartRetail.Domain.Events.OrderDispatchedEvent, ByteartRetail.Domain]], ByteartRetail.Events"/>
              <dependency name="orderConfirmedSendEmailHandler" type="ByteartRetail.Events.IEventHandler`1[[ByteartRetail.Domain.Events.OrderConfirmedEvent, ByteartRetail.Domain]], ByteartRetail.Events"/>
            </array>
          </param>
        </constructor>
      </register>
      <!--Event Bus-->
      <register type="ByteartRetail.Events.Bus.IEventBus, ByteartRetail.Events" mapTo="ByteartRetail.Events.Bus.EventBus, ByteartRetail.Events">
        <lifetime type="ByteartRetail.Infrastructure.UnityExtensions.UnityOperationContextLifetimeManager, ByteartRetail.Infrastructure"/>
      </register>
      <!--<register type="ByteartRetail.Events.Bus.IEventBus, ByteartRetail.Events"
                mapTo="ByteartRetail.Events.Bus.MSMQEventBus, ByteartRetail.Events">
        <lifetime type="ByteartRetail.Infrastructure.UnityExtensions.UnityOperationContextLifetimeManager, ByteartRetail.Infrastructure" />
        <constructor>
          <param name="path" value=".\private$\ByteartRetail" />
        </constructor>
      </register>-->
    </container>
  </unity>
  <!--END: Unity-->


  <!--BEGIN: ByteartRetail Configuration-->
  <byteartRetailConfigSection xmlns="urn:ByteartRetail.Infrastructure.Config">
    <emailClient host="smtp.163.com" port="25" userName="byteartretail" password="byteartretail123" enableSsl="false" sender="byteartretail@163.com"/>
  </byteartRetailConfigSection>
  <!--END: ByteartRetail Configuration-->

  <system.serviceModel>
    <extensions>
      <behaviorExtensions>
        <add name="unity" type="ByteartRetail.Infrastructure.UnityExtensions.UnityBehaviorExtensionElement, ByteartRetail.Infrastructure,  Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="false"/>
          <unity operationContextEnabled="true" instanceContextEnabled="true" contextChannelEnabled="true" serviceHostBaseEnabled="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true"/>
  </system.serviceModel>
  
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8"/>
    </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity.Interception" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
